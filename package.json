{
  "name": "alignzo",
  "version": "1.0.0",
  "description": "Enterprise Team Productivity Platform",
  "private": true,
  "workspaces": [
    "backend",
    "frontend"
  ],
  "scripts": {
    "setup": "node scripts/setup-database.js",
    "setup:seed": "node scripts/setup-database.js --seed",
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\"",
    "dev:backend": "cd backend && npm run dev",
    "dev:frontend": "cd frontend && npm run dev",
    "build": "npm run build:backend && npm run build:frontend",
    "build:backend": "cd backend && npm run build",
    "build:frontend": "cd frontend && npm run build",
    "start": "npm run start:backend",
    "start:backend": "cd backend && npm run start:prod",
    "start:frontend": "cd frontend && npm run start",
    "test": "npm run test:backend && npm run test:frontend",
    "test:backend": "cd backend && npm run test",
    "test:frontend": "cd frontend && npm run test",
    "test:e2e": "cd backend && npm run test:e2e",
    "lint": "npm run lint:backend && npm run lint:frontend",
    "lint:backend": "cd backend && npm run lint",
    "lint:frontend": "cd frontend && npm run lint",
    "lint:fix": "npm run lint:fix:backend && npm run lint:fix:frontend",
    "lint:fix:backend": "cd backend && npm run lint:fix",
    "lint:fix:frontend": "cd frontend && npm run lint:fix",
    "format": "prettier --write \"**/*.{ts,tsx,js,jsx,json,md}\"",
    "format:check": "prettier --check \"**/*.{ts,tsx,js,jsx,json,md}\"",
    "db:generate": "cd backend && npx prisma generate",
    "db:push": "cd backend && npx prisma db push",
    "db:pull": "cd backend && npx prisma db pull",
    "db:migrate": "cd backend && npx prisma migrate dev",
    "db:migrate:deploy": "cd backend && npx prisma migrate deploy",
    "db:migrate:reset": "cd backend && npx prisma migrate reset",
    "db:seed": "cd backend && npx prisma db seed",
    "db:studio": "cd backend && npx prisma studio",
    "db:backup": "node scripts/backup-database.js",
    "db:restore": "node scripts/restore-database.js",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:reset": "docker-compose down -v && docker-compose up -d",
    "install:all": "npm install && cd backend && npm install && cd ../frontend && npm install",
    "clean": "npm run clean:backend && npm run clean:frontend",
    "clean:backend": "cd backend && rm -rf dist node_modules",
    "clean:frontend": "cd frontend && rm -rf .next node_modules",
    "clean:all": "npm run clean && rm -rf node_modules",
    "storybook": "cd frontend && npm run storybook",
    "storybook:build": "cd frontend && npm run build-storybook",
    "docs:generate": "node scripts/generate-docs.js",
    "docs:serve": "docsify serve docs",
    "security:audit": "npm audit && cd backend && npm audit && cd ../frontend && npm audit",
    "security:fix": "npm audit fix && cd backend && npm audit fix && cd ../frontend && npm audit fix",
    "typecheck": "npm run typecheck:backend && npm run typecheck:frontend",
    "typecheck:backend": "cd backend && npm run typecheck",
    "typecheck:frontend": "cd frontend && npm run typecheck",
    "prepare": "husky install",
    "precommit": "lint-staged",
    "release": "semantic-release",
    "analyze": "cd frontend && npm run analyze",
    "performance": "cd frontend && npm run performance",
    "lighthouse": "cd frontend && npm run lighthouse",
    "launch-alignzo": "node scripts/setup-server/index.js",
    "updatedb": "node -e \"console.log('Use scripts/updatedb-alignzo.sh (Unix) or scripts/updatedb-alignzo.ps1 (Windows)');\""
  },
  "devDependencies": {
    "@commitlint/cli": "^18.0.0",
    "@commitlint/config-conventional": "^18.0.0",
    "concurrently": "^8.2.2",
    "husky": "^8.0.3",
    "lint-staged": "^15.0.0",
    "prettier": "^3.0.0",
    "prisma": "^6.13.0"
  },
  "lint-staged": {
    "*.{ts,tsx,js,jsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS",
      "pre-push": "npm run typecheck && npm run test"
    }
  },
  "engines": {
    "node": ">=20.0.0",
    "npm": ">=9.0.0"
  },
  "dependencies": {
    "@prisma/client": "^6.13.0",
    "cors": "^2.8.5",
    "express": "^4.19.2",
    "fs-extra": "^11.2.0",
    "multer": "^1.4.5-lts.1",
    "pg": "^8.11.5"
  }
}
